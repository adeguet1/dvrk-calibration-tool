!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Calibration	calibrate.py	/^class Calibration:$/;"	c
Marker	marker.py	/^class Marker:$/;"	c
ROB_FILE	analyze_data.py	/^ROB_FILE = ("\/home\/cnookal1\/catkin_ws\/src\/cisst-saw"$/;"	v
ROT_MATRIX	calibrate.py	/^    ROT_MATRIX = PyKDL.Rotation($/;"	v	class:Calibration
Settings	.ycm_extra_conf.py	/^def Settings( **kwargs ):$/;"	f
THRESH	calibrate.py	/^    THRESH = 1.5$/;"	v	class:Calibration
TestCalibration	calibration_tests.py	/^class TestCalibration(unittest.TestCase):$/;"	c
__init__	calibrate.py	/^    def __init__(self, robot_name, polaris=False):$/;"	m	class:Calibration
__init__	marker.py	/^    def __init__(self):$/;"	m	class:Marker
a	palpation_test.py	/^a = dvrk.arm("PSM3")/;"	v
callback	marker.py	/^    def callback(self, data):$/;"	m	class:Marker
choose_filename	calibrate.py	/^def choose_filename(fpath):$/;"	f
derivative	calibrate.py	/^def derivative(p1, p2):$/;"	f
gen_grid	calibrate.py	/^    def gen_grid(self, corners, nsamples, verbose=False):$/;"	m	class:Calibration
gen_wide_joint_positions	calibrate.py	/^    def gen_wide_joint_positions(self, nsamples=6):$/;"	m	class:Calibration
get_best_fit	analyze_data.py	/^def get_best_fit(pts):$/;"	f
get_best_fit_error	analyze_data.py	/^def get_best_fit_error(pts):$/;"	f
get_corners	calibrate.py	/^    def get_corners(self):$/;"	m	class:Calibration
get_current_position	marker.py	/^    def get_current_position(self):$/;"	m	class:Marker
get_new_offset	analyze_data.py	/^def get_new_offset(data_file=None, error_fk_outfile=None):$/;"	f
get_new_offset_polaris	analyze_data.py	/^def get_new_offset_polaris(data_file=None, error_fk_outfile=None):$/;"	f
home	calibrate.py	/^    def home(self):$/;"	m	class:Calibration
kdl2np	rot_matrix_test.py	/^def kdl2np(r):$/;"	f
np2kdl	rot_matrix_test.py	/^def np2kdl(arr):$/;"	f
op	test.py	/^op = input()$/;"	v
output_to_csv	calibrate.py	/^    def output_to_csv(self, fpath):$/;"	m	class:Calibration
palpate	calibrate.py	/^    def palpate(self, output_to_csv=False, show_graph=True):$/;"	m	class:Calibration
parse_analyze	calibrate.py	/^def parse_analyze(args):$/;"	f
parse_record	calibrate.py	/^def parse_record(args):$/;"	f
parse_view	calibrate.py	/^def parse_view(args):$/;"	f
plot_data	calibrate.py	/^def plot_data(data_file):$/;"	f
record_joints_polaris	calibrate.py	/^    def record_joints_polaris(self, joint_set, npoints=216, verbose=False):$/;"	m	class:Calibration
record_points	calibrate.py	/^    def record_points(self, pts, nsamples, verbose=False):$/;"	m	class:Calibration
record_points_polaris	calibrate.py	/^    def record_points_polaris(self, pts, npoints=100, verbose=False):$/;"	m	class:Calibration
rot_matrix	rot_matrix_test.py	/^def rot_matrix(roll, pitch, yaw):$/;"	f
test_distance	calibration_tests.py	/^    def test_distance(self):$/;"	m	class:TestCalibration
